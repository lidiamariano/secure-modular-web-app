version: '3.8'

services:
  db:
    image: postgres:15
    container_name: secureapp_db
    restart: always
    environment:
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "secureapp_db"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./src/database/init:/docker-entrypoint-initdb.d
    networks:
      - secureapp
    ports:
      - "5432:5432"

  pgadmin:
    image: dpage/pgadmin4
    container_name: secureapp_pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@example.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - secureapp

  backend:
    build:
      context: ./src/backend
    container_name: secureapp_backend
    ports:
      - "8080:8080"
    expose:
      - "8080"
    depends_on:
      - db
    networks: 
      - secureapp 
    environment:
      - DBHost=db
      - DBUser=user
      - DBPassword=password
      - DBName=secureapp_db
      - DBPort=5432

  
  frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile
    container_name: secureapp_frontend
    restart: unless-stopped
    networks:
      - secureapp
    volumes:
      - frontend_dist:/app/dist
    depends_on:
      - backend

  nginx:
    image: nginx:alpine
    container_name: secureapp_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - frontend_dist:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - secureapp

volumes:
  db_data:
  frontend_dist:

networks:
  secureapp:
    driver: bridge
