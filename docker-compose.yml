version: '3.8'

services:
  db:
    image: postgres:15
    container_name: secureapp_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./src/database/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - secureapp
    expose:
      - "5432"

  pgadmin:
    image: dpage/pgadmin4
    container_name: secureapp_pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - secureapp

  backend:
    build: ./src/backend
    container_name: secureapp_backend
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - secureapp
    expose:
      - "8080"
    depends_on:
      - db

  frontend:
    build: ./src/frontend
    container_name: secureapp_frontend
    restart: unless-stopped
    networks:
      - secureapp
    expose:
      - "80"
    depends_on:
      - backend

  nginx:
    image: nginx:alpine
    container_name: secureapp_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./src/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./src/frontend/dist:/usr/share/nginx/html:ro
    depends_on:
      - backend
      - frontend
    networks:
      - secureapp

volumes:
  db_data:

networks:
  secureapp:
    driver: bridge
